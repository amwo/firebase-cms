{"version":3,"file":"static/webpack/static/development/pages/index.js.bbfd02939582a6784968.hot-update.js","sources":["webpack:///./states/fn.js"],"sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst fn = store => ({\n    increment: state => ({ count: state.count + 1 }),\n    decrement: state => ({ count: state.count - 1 }),\n    isUserEmail: (states, email) => {\n        let db = firebase.firestore()\n        store.setState(states => ({\n            s: {\n                ...states.s,\n                page: {\n                    emailLoading: true,\n                    PasswordLoading: false,\n                    email: '',\n                    password: ''\n                }\n            },\n        }))\n        db.collection('tokyoislands').doc('people').collection('users').where('email', '==', email).get().then(query => {\n            store.setState(states => ({\n                s: {\n                    ...states.s,\n                    page: {\n                        ...states.s.page,\n                        emailLoading: false,\n                        email: query.docs[0].data().email,\n                        password: ''\n                    }\n                },\n            }))\n        }).catch(err => {\n            store.setState(states => ({\n                s: {\n                    ...states.s,\n                    page: {}\n                },\n            }))\n            console.log(err)\n        })\n    },\n    auth: (states, email, password) => {\n        store.setState(states => ({\n            s: {\n                ...states.s,\n                page: {\n                    ...states.s.page,\n                    PasswordLoading: true\n                }\n            },\n        }))\n        firebase.auth().signInWithEmailAndPassword(email, password).catch(err => {\n            if(err) {\n                store.setState(states => ({\n                    s: {\n                        ...states.s,\n                        page: {\n                            ...states.s.page,\n                            PasswordLoading: false\n                        }\n                    },\n                }))\n                return false\n            }\n\n\n        })\n\n        //store.setState(states => ({\n        //    s: {\n        //        ...states.s,\n        //        login: true\n        //    },\n        //}))\n    },\n    auth: state => ({\n    })\n});\n\nexport default fn;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AADA;AAAA;AAWA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAJA;AAFA;AADA;AAAA;AAWA;AACA;AAAA;AACA;AAEA;AAFA;AADA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AAFA;AADA;AAAA;AASA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AAFA;AADA;AAAA;AASA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAvEA;AAwEA;AAAA;AAxEA;AACA;AA2EA;;;;A","sourceRoot":""}