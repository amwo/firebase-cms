{"version":3,"file":"static/webpack/static/development/pages/settings.js.34bba1c2af6a042b3392.hot-update.js","sources":["webpack:///./components/input/index.js"],"sourcesContent":["import {Component} from 'react'\nimport Default from '../../layouts/default'\nimport Router from 'next/router'\nimport {connect} from 'redux-zero/react';\nimport fn from '../../states/fn';\nimport style from './style.css'\n\nconst mapToProps = ({ s , d}) => ({ s, d });\n\nclass Input extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        if(this.props.type === 'text' || this.props.type === 'email' || this.props.type === 'password') {\n            switch(this.props.size) {\n                case 's':\n                    return (\n                        <input className={style.s} type={this.props.type} value={this.props.value} placeholder={this.props.placeholder} onchange={this.props.onchange}/>\n                    )\n                    break\n                default:\n                    return (\n                        <div className={this.props.form === 'cap' ? style.cap : this.props.form === 'lid' ? style.lid : style.r}>\n                            <input className={this.props.invert ? style.textDark : style.textLight} type={this.props.type === 'password' ? 'password' : this.props.type === 'email' ? 'email' : 'text'} value={this.props.value} placeholder={this.props.placeholder} onKeyDown={this.props.onKeyDown} onChange={this.props.onChange} autoFocus={this.props.autoFocus} readOnly={this.props.readOnly} autoComplete={this.props.autoComplete} disabled={this.props.disabled}/>\n                                {this.props.loading ? <div className={style.btSpinner}></div> : this.props.lastIcon ? <button className={style.lastIcon}><img src={this.props.lastIcon} width=\"12\" height=\"\" alt=\"Icon\" /></button> : null }\n                            </div>\n                    )\n                    return\n            }\n        }\n    }\n}\n\nexport default connect(mapToProps, fn)(Input)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAbA;AAeA;AACA;;;;AAvBA;AACA;AAyBA;;;;A","sourceRoot":""}