{"version":3,"file":"static/webpack/static/development/pages/news.js.2207f4dab4719297bc9d.hot-update.js","sources":["webpack:///./widgets/postEditor/index.js"],"sourcesContent":["import {Component} from 'react'\nimport {connect} from 'redux-zero/react'\nimport fn from '../../states/fn'\nimport style from './style.css'\nimport {Editor, EditorState, ContentState, ContentBlock, AtomicBlockUtils, RichUtils, getDefaultKeyBinding, KeyBindingUtil, convertToRaw, convertFromHTML} from 'draft-js'\nimport {stateToHTML} from 'draft-js-export-html'\nimport Div from '../../components/div'\nimport H1 from '../../components/h1'\nimport H3 from '../../components/h3'\nimport Select from '../../components/select'\nimport Category from '../../widgets/category'\nimport Tags from '../../widgets/tags'\nimport ThumbnailDnD from '../../widgets/thumbnailDnD'\nimport PostAvatar from '../../widgets/postAvatar'\nimport Tools from '../../widgets/tools'\nimport Immutable from 'immutable'\n\nconst mapToProps = ({ s , d}) => ({ s, d });\nconst {hasCommandModifier} = KeyBindingUtil\n\nclass PostEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.styling = this.styling.bind(this)\n        this.onChange = (editorState) => this.setState({editorState})\n        this.focus = this.focus.bind(this)\n        this.handleKeyCommand = this.handleKeyCommand.bind(this)\n        this.convertFromRaw = this.convertFromRaw.bind(this)\n        this.titleKeyDown = this.titleKeyDown.bind(this)\n        this.wrapper =  this.wrapper.bind(this)\n        this.blockRenderMap = Immutable.Map({\n            'header-two': {\n                element: 'h2'\n            },\n            'unstyled': {\n                element: 'div',\n            }\n        })\n        this.state = {\n            editorState: EditorState.createEmpty()\n        }\n        this.editorState = this.state.editorState\n        this.contentState = this.editorState.getCurrentContent()\n        this.selectionState = this.editorState.getSelection()\n        this.currentContentBlock = this.contentState.getBlockForKey(this.selectionState.getAnchorKey())\n    }\n\n    convertFromRaw = () => {\n        let raw = convertToRaw(this.contentState)\n        let html = stateToHTML(this.contentState)\n        //console.log(contentState)\n        //console.log(raw)\n        //console.log(html)\n    }\n\n    wrapper = contentBlock => {\n        const type = contentBlock.getType()\n        if (type === 'unstyled') {\n            return {\n                component: Tools,\n                editable: true,\n            }\n        }\n    }\n\n    handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState)\n            return 'handled';\n        }\n        return 'not-handled'\n    }\n\n    titleKeyDown = e => {\n        if(e.keyCode === 13) {\n            e.preventDefault()\n            this.refs['content'].focus()\n        }\n    }\n\n    styling = (content) => {\n        const type = content.getType();\n        //console.log(type)\n        switch(type) {\n            case 'unstyled':\n                return 'editor-content-p'\n                break;\n            default:\n                return null\n        }\n    }\n\n    focus = e => {\n    }\n\n    render() {\n        //console.log(this.currentContentBlock.text)\n        //console.log(this.contentState.getBlockMap().length)\n        //console.log(this.contentState.getFirstBlock().getText())\n        //console.log(this.contentState.getLastBlock().getText())\n        //console.log(this.contentState.createFromBlockArray)\n        //console.log(this.editorState.currentContent)\n        return (\n            <section className={style.r}>\n                <section className={style.center}>\n                    <div className={style.content}>\n                        <div className={style.type}>\n                            <Select type=\"list\" size=\"m\" value=\"News\" />\n                        </div>\n                        <h1 ref=\"title\" className={style.title} placeholder=\"Title\" onKeyDown={this.titleKeyDown} contentEditable suppressContentEditableWarning>Oshima Islandâ€™s Perfect Guide -Must-see spots, Activities, Accommodation and Access</h1>\n                        <div className={style.avatarWrap}>\n                        </div>\n                        <div className={style.editor}>\n                            <Editor\n                                ref=\"content\"\n                                editorState={this.state.editorState}\n                                handleKeyCommand={this.handleKeyCommand}\n                                placeholder=\"Edit\"\n                                blockRenderMap={this.blockRenderMap}\n                                blockRendererFn={this.wrapper}\n                                blockStyleFn={this.styling}\n                                onFocus={this.focus}\n                                onChange={this.onChange}\n                                onMouseUp={this.getSelection}\n                            />\n                        </div>\n                        <button onClick={this.convertFromRaw}>Convert from Raw</button>\n                    </div>\n                </section>\n                <section className={style.right}>\n                    <ThumbnailDnD />\n                    <Div type=\"m\">\n                        <H3 title=\"Author\" />\n                        <Div type=\"s\">\n                            <PostAvatar />\n                        </Div>\n                    </Div>\n                    <Div type=\"m\">\n                        <H3 title=\"Category\" />\n                        <Div type=\"s\">\n                            <Category />\n                        </Div>\n                    </Div>\n                    <Div type=\"m\">\n                        <H3 title=\"Tags\" />\n                        <Div type=\"s\">\n                            <Tags />\n                        </Div>\n                    </Div>\n                    <Div type=\"m\">\n                        <H3 title=\"State\" />\n                        <Div type=\"s\">\n                        </Div>\n                    </Div>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default connect(mapToProps, fn)(PostEditor)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2BA;AACA;AAEA;AACA;AACA;AACA;AAjCA;AAmCA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA3CA;AAsDA;AACA;AACA;AAAA;AACA;AACA;AACA;AA3DA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AAOA;AACA;AAvEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AAvBA;AAwBA;AACA;;;AAmBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAasourceRoot":""}