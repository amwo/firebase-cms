{"version":3,"file":"static/webpack/static/development/pages/news.js.f74a820f0677d3559568.hot-update.js","sources":["webpack:///./widgets/postEditor/index.js"],"sourcesContent":["import {Component} from 'react'\nimport {connect} from 'redux-zero/react';\nimport fn from '../../states/fn';\nimport style from './style.css'\nimport {Editor, EditorState, RichUtils, getDefaultKeyBinding, KeyBindingUtil, convertToRaw} from 'draft-js';\nimport {stateToHTML} from 'draft-js-export-html';\nimport Div from '../../components/div'\nimport H1 from '../../components/h1'\nimport H3 from '../../components/h3'\nimport Select from '../../components/select'\nimport Category from '../../widgets/category'\nimport Tags from '../../widgets/tags'\nimport ThumbnailDnD from '../../widgets/thumbnailDnD'\nimport Immutable from 'immutable'\n\nconst mapToProps = ({ s , d}) => ({ s, d });\nconst {hasCommandModifier} = KeyBindingUtil\n\nclass PostEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.styling = this.styling.bind(this)\n        this.onChange = (editorState) => this.setState({editorState})\n        this.handleKeyCommand = this.handleKeyCommand.bind(this)\n        this._onBoldClick = this._onBoldClick.bind(this)\n        this.convertFromRaw = this.convertFromRaw.bind(this)\n        this.titleKeyDown = this.titleKeyDown.bind(this)\n        this.blockRenderMap = Immutable.Map({\n            'header-two': {\n                element: 'h2'\n            },\n            'unstyled': {\n                element: 'p'\n            }\n        })\n        this.state = {\n            editorState: EditorState.createEmpty(),\n            raw: ''\n        }\n    }\n    convertFromRaw = () => {\n        let contentState = this.state.editorState.getCurrentContent()\n        let raw = convertToRaw(contentState)\n        let html = stateToHTML(contentState)\n        console.log(contentState)\n        console.log(raw)\n        console.log(html)\n    }\n\n    handleKeyCommand(command, editorState) {\n        console.log(command)\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState)\n            return 'handled';\n        }\n        return 'not-handled'\n    }\n\n    titleKeyDown = e => {\n        if(e.keyCode === 13) {\n            e.preventDefault()\n            this.refs['content'].focus()\n        }\n    }\n\n    styling = (content) => {\n        const type = content.getType();\n        console.log(type)\n        switch(type) {\n            case 'split-block':\n                return 'superFancyBlockquote'\n                break;\n            case 'bold':\n                return 'editor-content-pstyle-bold'\n                break;\n            case 'unstyled':\n                return 'editor-content-pstyle-bold'\n                break;\n            default:\n                return null\n        }\n    }\n\n    _onBoldClick() {\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n    }\n\n    render() {\n        return (\n            <section className={style.r}>\n                <section className={style.center}>\n                    <div className={style.content}>\n                        <div className={style.type}>\n                            <Select type=\"list\" size=\"m\" value=\"News\" />\n                        </div>\n                    <h1 ref=\"title\" className={style.title} placeholder=\"Title\" onKeyDown={this.titleKeyDown} contentEditable suppressContentEditableWarning>Oshima Islandâ€™s Perfect Guide -Must-see spots, Activities, Accommodation and Access</h1>\n                    <div className={style.editor}>\n                        <Editor\n                            ref=\"content\"\n                            editorState={this.state.editorState}\n                            handleKeyCommand={this.handleKeyCommand}\n                            onChange={this.onChange}\n                            placeholder=\"Edit\"\n                            blockRenderMap={this.blockRenderMap}\n                            blockStyleFn={this.styling}\n                        />\n                    </div>\n                    <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n                    <button onClick={this.convertFromRaw}>Convert from Raw</button>\n                    </div>\n                </section>\n                <section className={style.right}>\n                        <ThumbnailDnD />\n                    <Div type=\"m\">\n                        <H3 title=\"Category\" />\n                        <Category />\n                    </Div>\n                    <Div type=\"m\">\n                        <H3 title=\"Tags\" />\n                        <Tags />\n                    </Div>\n                    <Div type=\"m\">\n                        <H3 title=\"State\" />\n                    </Div>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default connect(mapToProps, fn)(PostEditor)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAyCA;AACA;AACA;AAAA;AACA;AACA;AACA;AA9CA;AAgDA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AAaA;AACA;AA9DA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAhBA;AAoBA;AACA;;;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AA2BA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9GA;AACA;AAgHA;;;;A","sourceRoot":""}