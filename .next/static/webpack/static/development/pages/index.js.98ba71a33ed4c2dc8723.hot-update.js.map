{"version":3,"file":"static/webpack/static/development/pages/index.js.98ba71a33ed4c2dc8723.hot-update.js","sources":["webpack:///./widgets/postEditor/index.js"],"sourcesContent":["import {Component} from 'react'\nimport {connect} from 'redux-zero/react';\nimport fn from '../../states/fn';\nimport style from './style.css'\nimport {Editor, EditorState, RichUtils, getDefaultKeyBinding, KeyBindingUtil} from 'draft-js';\nimport H1 from '../../components/h1'\nimport Immutable from 'immutable'\n\nconst mapToProps = ({ s , d}) => ({ s, d });\nconst {hasCommandModifier} = KeyBindingUtil\n\nclass PostEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.styling = this.styling.bind(this)\n        this.state = {editorState: EditorState.createEmpty()}\n        this.onChange = (editorState) => this.setState({editorState})\n        this.handleKeyCommand = this.handleKeyCommand.bind(this)\n        this._onBoldClick = this._onBoldClick.bind(this)\n        this.blockRenderMap = Immutable.Map({\n            'header-two': {\n                element: 'h2'\n            },\n            'unstyled': {\n                element: 'h2'\n            }\n        })\n    }\n\n    handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState)\n            return 'handled';\n        }\n        return 'not-handled'\n    }\n\n    styling = (content) => {\n        const type = content.getType();\n        switch(type) {\n            case 'blockquote':\n                return 'superFancyBlockquote';\n            case 'bold':\n                return 'superFancyBlockquote';\n            default:\n                return null\n        }\n    }\n\n    _onBoldClick() {\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n    }\n\n    render() {\n        return (\n            <section className={style.r}>\n                <h1>Edito</h1>\n                <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n                <section className={style.editor}>\n                    <Editor\n                        editorState={this.state.editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        onChange={this.onChange}\n                        placeholder=\"Edit\"\n                        blockRenderMap={this.blockRenderMap}\n                        blockStyleFn={this.styling}\n                    />\n                </section>\n\n                <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n\n            </section>\n        );\n    }\n}\n\nexport default connect(mapToProps, fn)(PostEditor)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2BA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AAnCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAPA;AAeA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAcA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/DA;AACA;AAiEA;;;;A","sourceRoot":""}